# Staging Environment Configuration
# This file contains environment-specific settings for staging deployments

# Environment
ENVIRONMENT=staging
DEBUG=False
DJANGO_SETTINGS_MODULE=settings.staging

# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCOUNT_ID=123456789012
ECR_REGISTRY=123456789012.dkr.ecr.us-east-1.amazonaws.com

# Project Configuration
PROJECT_NAME=django-microservices
CLUSTER_NAME=django-microservices-cluster

# Database Configuration
DB_ENGINE=postgresql
DB_NAME=django_microservices_staging
DB_USERNAME=postgres
DB_PASSWORD=staging_password_change_me
DB_HOST=staging-db-endpoint.amazonaws.com
DB_PORT=5432

# Redis Configuration
REDIS_HOST=staging-cache-endpoint.amazonaws.com
REDIS_PORT=6379
REDIS_PASSWORD=staging_redis_password_change_me
REDIS_DB=0

# Security Configuration
SECRET_KEY=staging_secret_key_change_me_to_something_secure
ALLOWED_HOSTS=staging-alb-dns.us-east-1.elb.amazonaws.com,localhost,127.0.0.1

# JWT Configuration
JWT_SECRET_KEY=staging_jwt_secret_change_me
JWT_ALGORITHM=HS256
JWT_EXPIRATION_DELTA=3600

# CORS Configuration
CORS_ALLOWED_ORIGINS=https://staging-frontend.yourcompany.com,http://localhost:3000
CORS_ALLOW_CREDENTIALS=True

# Service URLs (for inter-service communication)
USER_SERVICE_URL=http://django-microservices-user-service.local:8001
PRODUCT_SERVICE_URL=http://django-microservices-product-service.local:8002
ORDER_SERVICE_URL=http://django-microservices-order-service.local:8003
NOTIFICATION_SERVICE_URL=http://django-microservices-notification-service.local:8004

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
SENTRY_DSN=https://staging-sentry-dsn@sentry.io/project

# Performance Configuration
GUNICORN_WORKERS=2
GUNICORN_THREADS=4
GUNICORN_TIMEOUT=30
GUNICORN_KEEPALIVE=2

# Health Check Configuration
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_INTERVAL=30

# Monitoring Configuration
METRICS_ENABLED=True
METRICS_PORT=9090
PROMETHEUS_ENDPOINT=/metrics

# Feature Flags
FEATURE_USER_REGISTRATION=True
FEATURE_EMAIL_NOTIFICATIONS=True
FEATURE_SMS_NOTIFICATIONS=False
FEATURE_ANALYTICS=True

# Third-party Service Configuration
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.mailgun.org
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=staging@yourcompany.com
EMAIL_HOST_PASSWORD=staging_email_password

# S3 Configuration
S3_BUCKET_NAME=django-microservices-staging
S3_REGION=us-east-1
S3_ACCESS_KEY_ID=staging_s3_access_key
S3_SECRET_ACCESS_KEY=staging_s3_secret_key

# Backup Configuration
BACKUP_S3_BUCKET=django-microservices-backups-staging
BACKUP_RETENTION_DAYS=7

# Cache Configuration
CACHE_TIMEOUT=300
CACHE_KEY_PREFIX=staging_
CACHE_VERSION=1

# Session Configuration
SESSION_ENGINE=django.contrib.sessions.backends.cache
SESSION_CACHE_ALIAS=default
SESSION_COOKIE_AGE=86400
SESSION_COOKIE_SECURE=True
SESSION_COOKIE_HTTPONLY=True

# CSRF Configuration
CSRF_COOKIE_SECURE=True
CSRF_COOKIE_HTTPONLY=True
CSRF_TRUSTED_ORIGINS=https://staging-frontend.yourcompany.com

# Rate Limiting
RATE_LIMIT_ENABLED=True
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD=60

# Celery Configuration (if using async tasks)
CELERY_BROKER_URL=redis://staging-cache-endpoint.amazonaws.com:6379/1
CELERY_RESULT_BACKEND=redis://staging-cache-endpoint.amazonaws.com:6379/1
CELERY_TASK_SERIALIZER=json
CELERY_ACCEPT_CONTENT=json
CELERY_RESULT_SERIALIZER=json
CELERY_TIMEZONE=UTC

# API Configuration
API_VERSION=v1
API_PREFIX=/api
API_THROTTLE_RATE=1000/hour

# Test Configuration
TEST_RUNNER=django.test.runner.DiscoverRunner
TEST_DATABASE_NAME=test_django_microservices_staging 